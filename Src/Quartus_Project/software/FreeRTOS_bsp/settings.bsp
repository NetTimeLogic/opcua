<?xml version="1.0" encoding="UTF-8"?>
<sch:Settings xmlns:sch="http://www.altera.com/embeddedsw/bsp/schema">
        <BspType>freertos</BspType>
        <BspVersion>default</BspVersion>
        <BspGeneratedTimeStamp>12.08.2020 16:57:11</BspGeneratedTimeStamp>
        <BspGeneratedUnixTimeStamp>1597244231822</BspGeneratedUnixTimeStamp>
        <BspGeneratedLocation>C:\opcua\Src\Quartus_Project\software\FreeRTOS_bsp</BspGeneratedLocation>
        <BspSettingsFile>settings.bsp</BspSettingsFile>
        <SopcDesignFile>..\..\Nios.sopcinfo</SopcDesignFile>
        <JdiFile>default</JdiFile>
        <Cpu>cpu_0</Cpu>
        <SchemaVersion>1.9</SchemaVersion>
        <Setting>
                <SettingName>hal.sys_clk_timer</SettingName>
                <Identifier>ALT_SYS_CLK</Identifier>
                <Type>UnquotedString</Type>
                <Value>timer_0</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Slave descriptor of the system clock timer device. This device provides a periodic interrupt ("tick") and is typically required for RTOS use. This setting defines the value of ALT_SYS_CLK in system.h.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>common</Group>
        </Setting>
        <Setting>
                <SettingName>hal.timestamp_timer</SettingName>
                <Identifier>ALT_TIMESTAMP_CLK</Identifier>
                <Type>UnquotedString</Type>
                <Value>none</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Slave descriptor of timestamp timer device. This device is used by Altera HAL timestamp drivers for high-resolution time measurement. This setting defines the value of ALT_TIMESTAMP_CLK in system.h.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>common</Group>
        </Setting>
        <Setting>
                <SettingName>hal.max_file_descriptors</SettingName>
                <Identifier>ALT_MAX_FD</Identifier>
                <Type>DecimalNumber</Type>
                <Value>16</Value>
                <DefaultValue>32</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Determines the number of file descriptors statically allocated. This setting defines the value of ALT_MAX_FD in system.h.</Description>
                <Restrictions>If hal.enable_lightweight_device_driver_api is true, there are no file descriptors so this setting is ignored. If hal.enable_lightweight_device_driver_api is false, this setting must be at least 4 because HAL needs a file descriptor for /dev/null, /dev/stdin, /dev/stdout, and /dev/stderr.</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>hal.enable_instruction_related_exceptions_api</SettingName>
                <Identifier>ALT_INCLUDE_INSTRUCTION_RELATED_EXCEPTION_API</Identifier>
                <Type>BooleanDefineOnly</Type>
                <Value>true</Value>
                <DefaultValue>false</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Enables API for registering handlers to service instruction-related exceptions. Enabling this setting increases the size of the exception entry code.</Description>
                <Restrictions>These exception types can be generated if various processor options are enabled, such as the MMU, MPU, or other advanced exception types.</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>hal.linker.allow_code_at_reset</SettingName>
                <Identifier>ALT_ALLOW_CODE_AT_RESET</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>none</DestinationFile>
                <Description>Indicates if initialization code is allowed at the reset address. If true, defines the macro ALT_ALLOW_CODE_AT_RESET in linker.h.</Description>
                <Restrictions>If true, defines the macro ALT_ALLOW_CODE_AT_RESET in linker.h. This setting is typically false if an external bootloader (e.g. flash bootloader) is present.</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>hal.linker.enable_alt_load</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>none</DestinationFile>
                <Description>Enables the alt_load() facility. The alt_load() facility copies data sections (.rodata, .rwdata, or .exceptions) from boot memory to RAM. If true, this setting sets up the VMA/LMA of sections in linker.x to allow them to be loaded into the .text memory.</Description>
                <Restrictions>This setting is typically false if an external bootloader (e.g. flash bootloader) is present.</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>hal.linker.enable_alt_load_copy_rodata</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>none</DestinationFile>
                <Description>Causes the alt_load() facility to copy the .rodata section. If true, this setting defines the macro ALT_LOAD_COPY_RODATA in linker.h.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>hal.linker.enable_alt_load_copy_rwdata</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>none</DestinationFile>
                <Description>Causes the alt_load() facility to copy the .rwdata section. If true, this setting defines the macro ALT_LOAD_COPY_RWDATA in linker.h.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>hal.linker.enable_alt_load_copy_exceptions</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>none</DestinationFile>
                <Description>Causes the alt_load() facility to copy the .exceptions section. If true, this setting defines the macro ALT_LOAD_COPY_EXCEPTIONS in linker.h.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>hal.linker.enable_exception_stack</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>none</DestinationFile>
                <Description>Enables use of a separate exception stack. If true, defines the macro ALT_EXCEPTION_STACK in linker.h, adds a memory region called exception_stack to linker.x, and provides the symbols __alt_exception_stack_pointer and __alt_exception_stack_limit in linker.x.</Description>
                <Restrictions>The hal.linker.exception_stack_size and hal.linker.exception_stack_memory_region_name settings must also be valid. This setting must be false for MicroC/OS-II BSPs. The exception stack can be used to improve interrupt and other exception performance if the EIC is *not* used.</Restrictions>
                <Enabled>false</Enabled>
                <Group>common</Group>
        </Setting>
        <Setting>
                <SettingName>hal.linker.exception_stack_size</SettingName>
                <Identifier>none</Identifier>
                <Type>DecimalNumber</Type>
                <Value>1024</Value>
                <DefaultValue>1024</DefaultValue>
                <DestinationFile>none</DestinationFile>
                <Description>Size of the exception stack in bytes.</Description>
                <Restrictions>Only used if hal.linker.enable_exception_stack is true.</Restrictions>
                <Enabled>false</Enabled>
                <Group>common</Group>
        </Setting>
        <Setting>
                <SettingName>hal.linker.exception_stack_memory_region_name</SettingName>
                <Identifier>none</Identifier>
                <Type>UnquotedString</Type>
                <Value>sdram_controller_0</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>none</DestinationFile>
                <Description>Name of the existing memory region that will be divided up to create the 'exception_stack' memory region. The selected region name will be adjusted automatically when the BSP is generated to create the 'exception_stack' memory region.</Description>
                <Restrictions>Only used if hal.linker.enable_exception_stack is true.</Restrictions>
                <Enabled>false</Enabled>
                <Group>common</Group>
        </Setting>
        <Setting>
                <SettingName>hal.linker.enable_interrupt_stack</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>none</DestinationFile>
                <Description>Enables use of a separate interrupt stack. If true, defines the macro ALT_INTERRUPT_STACK in linker.h, adds a memory region called interrupt_stack to linker.x, and provides the symbols __alt_interrupt_stack_pointer and __alt_interrupt_stack_limit in linker.x.</Description>
                <Restrictions>The hal.linker.interrupt_stack_size and hal.linker.interrupt_stack_memory_region_name settings must also be valid. This setting must be false for MicroC/OS-II BSPs. Only enable if the EIC is used exclusively. The exception stack can be used to improve interrupt and other exception performance if the EIC is *not* used.</Restrictions>
                <Enabled>false</Enabled>
                <Group>common</Group>
        </Setting>
        <Setting>
                <SettingName>hal.linker.interrupt_stack_size</SettingName>
                <Identifier>none</Identifier>
                <Type>DecimalNumber</Type>
                <Value>1024</Value>
                <DefaultValue>1024</DefaultValue>
                <DestinationFile>none</DestinationFile>
                <Description>Size of the interrupt stack in bytes.</Description>
                <Restrictions>Only used if hal.linker.enable_interrupt_stack is true.</Restrictions>
                <Enabled>false</Enabled>
                <Group>common</Group>
        </Setting>
        <Setting>
                <SettingName>hal.linker.interrupt_stack_memory_region_name</SettingName>
                <Identifier>none</Identifier>
                <Type>UnquotedString</Type>
                <Value>sdram_controller_0</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>none</DestinationFile>
                <Description>Name of the existing memory region that will be divided up to create the 'interrupt_stack' memory region. The selected region name will be adjusted automatically when the BSP is generated to create the 'interrupt_stack' memory region.</Description>
                <Restrictions>Only used if hal.linker.enable_interrupt_stack is true.</Restrictions>
                <Enabled>false</Enabled>
                <Group>common</Group>
        </Setting>
        <Setting>
                <SettingName>hal.stdin</SettingName>
                <Identifier>none</Identifier>
                <Type>UnquotedString</Type>
                <Value>uart_0</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Slave descriptor of STDIN character-mode device. This setting is used by the ALT_STDIN family of defines in system.h.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>common</Group>
        </Setting>
        <Setting>
                <SettingName>hal.stdout</SettingName>
                <Identifier>none</Identifier>
                <Type>UnquotedString</Type>
                <Value>uart_0</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Slave descriptor of STDOUT character-mode device. This setting is used by the ALT_STDOUT family of defines in system.h.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>common</Group>
        </Setting>
        <Setting>
                <SettingName>hal.stderr</SettingName>
                <Identifier>none</Identifier>
                <Type>UnquotedString</Type>
                <Value>uart_0</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Slave descriptor of STDERR character-mode device. This setting is used by the ALT_STDERR family of defines in system.h.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>common</Group>
        </Setting>
        <Setting>
                <SettingName>hal.log_port</SettingName>
                <Identifier>none</Identifier>
                <Type>UnquotedString</Type>
                <Value>none</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Slave descriptor of debug logging character-mode device. If defined, it enables extra debug messages in the HAL source. This setting is used by the ALT_LOG_PORT family of defines in system.h.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.build_pre_process</SettingName>
                <Identifier>BUILD_PRE_PROCESS</Identifier>
                <Type>UnquotedString</Type>
                <Value>none</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Command executed before BSP built.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.ar_pre_process</SettingName>
                <Identifier>AR_PRE_PROCESS</Identifier>
                <Type>UnquotedString</Type>
                <Value>none</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Command executed before archiver execution.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.bsp_cflags_defined_symbols</SettingName>
                <Identifier>BSP_CFLAGS_DEFINED_SYMBOLS</Identifier>
                <Type>UnquotedString</Type>
                <Value>none</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Preprocessor macros to define. A macro definition in this setting has the same effect as a "#define" in source code. Adding "-DALT_DEBUG" to this setting has the same effect as "#define ALT_DEBUG" in a souce file. Adding "-DFOO=1" to this setting is equivalent to the macro "#define FOO 1" in a source file. Macros defined with this setting are applied to all .S, .c, and C++ files in the BSP. This setting defines the value of BSP_CFLAGS_DEFINED_SYMBOLS in the BSP Makefile.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.ar_post_process</SettingName>
                <Identifier>AR_POST_PROCESS</Identifier>
                <Type>UnquotedString</Type>
                <Value>none</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Command executed after archiver execution.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.as</SettingName>
                <Identifier>AS</Identifier>
                <Type>UnquotedString</Type>
                <Value>nios2-elf-gcc</Value>
                <DefaultValue>nios2-elf-gcc</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Assembler command. Note that CC is used for .S files.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.build_post_process</SettingName>
                <Identifier>BUILD_POST_PROCESS</Identifier>
                <Type>UnquotedString</Type>
                <Value>none</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Command executed after BSP built.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.bsp_cflags_debug</SettingName>
                <Identifier>BSP_CFLAGS_DEBUG</Identifier>
                <Type>UnquotedString</Type>
                <Value>-g</Value>
                <DefaultValue>-g</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>C/C++ compiler debug level. '-g' provides the default set of debug symbols typically required to debug a typical application. Omitting '-g' removes debug symbols from the ELF. This setting defines the value of BSP_CFLAGS_DEBUG in Makefile.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>common</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.ar</SettingName>
                <Identifier>AR</Identifier>
                <Type>UnquotedString</Type>
                <Value>nios2-elf-ar</Value>
                <DefaultValue>nios2-elf-ar</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Archiver command. Creates library files.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.rm</SettingName>
                <Identifier>RM</Identifier>
                <Type>UnquotedString</Type>
                <Value>rm -f</Value>
                <DefaultValue>rm -f</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Command used to remove files during 'clean' target.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.cxx_pre_process</SettingName>
                <Identifier>CXX_PRE_PROCESS</Identifier>
                <Type>UnquotedString</Type>
                <Value>none</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Command executed before each C++ file is compiled.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.bsp_cflags_warnings</SettingName>
                <Identifier>BSP_CFLAGS_WARNINGS</Identifier>
                <Type>UnquotedString</Type>
                <Value>-Wall</Value>
                <DefaultValue>-Wall</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>C/C++ compiler warning level. "-Wall" is commonly used.This setting defines the value of BSP_CFLAGS_WARNINGS in Makefile.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.bsp_arflags</SettingName>
                <Identifier>BSP_ARFLAGS</Identifier>
                <Type>UnquotedString</Type>
                <Value>-src</Value>
                <DefaultValue>-src</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Custom flags only passed to the archiver. This content of this variable is directly passed to the archiver rather than the more standard "ARFLAGS". The reason for this is that GNU Make assumes some default content in ARFLAGS. This setting defines the value of BSP_ARFLAGS in Makefile.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.bsp_cflags_optimization</SettingName>
                <Identifier>BSP_CFLAGS_OPTIMIZATION</Identifier>
                <Type>UnquotedString</Type>
                <Value>-O0</Value>
                <DefaultValue>-O0</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>C/C++ compiler optimization level. "-O0" = no optimization,"-O2" = "normal" optimization, etc. "-O0" is recommended for code that you want to debug since compiler optimization can remove variables and produce non-sequential execution of code while debugging. This setting defines the value of BSP_CFLAGS_OPTIMIZATION in Makefile.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>common</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.as_post_process</SettingName>
                <Identifier>AS_POST_PROCESS</Identifier>
                <Type>UnquotedString</Type>
                <Value>none</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Command executed after each assembly file is compiled.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.cc_pre_process</SettingName>
                <Identifier>CC_PRE_PROCESS</Identifier>
                <Type>UnquotedString</Type>
                <Value>none</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Command executed before each .c/.S file is compiled.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.bsp_asflags</SettingName>
                <Identifier>BSP_ASFLAGS</Identifier>
                <Type>UnquotedString</Type>
                <Value>-Wa,-gdwarf2</Value>
                <DefaultValue>-Wa,-gdwarf2</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Custom flags only passed to the assembler. This setting defines the value of BSP_ASFLAGS in Makefile.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.as_pre_process</SettingName>
                <Identifier>AS_PRE_PROCESS</Identifier>
                <Type>UnquotedString</Type>
                <Value>none</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Command executed before each assembly file is compiled.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.bsp_cflags_undefined_symbols</SettingName>
                <Identifier>BSP_CFLAGS_UNDEFINED_SYMBOLS</Identifier>
                <Type>UnquotedString</Type>
                <Value>none</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Preprocessor macros to undefine. Undefined macros are similar to defined macros, but replicate the "#undef" directive in source code. To undefine the macro FOO use the syntax "-u FOO" in this setting. This is equivalent to "#undef FOO" in a source file. Note: the syntax differs from macro definition (there is a space, i.e. "-u FOO" versus "-DFOO"). Macros defined with this setting are applied to all .S, .c, and C++ files in the BSP. This setting defines the value of BSP_CFLAGS_UNDEFINED_SYMBOLS in the BSP Makefile.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.cc_post_process</SettingName>
                <Identifier>CC_POST_PROCESS</Identifier>
                <Type>UnquotedString</Type>
                <Value>none</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Command executed after each .c/.S file is compiled.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.cxx_post_process</SettingName>
                <Identifier>CXX_POST_PROCESS</Identifier>
                <Type>UnquotedString</Type>
                <Value>none</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Command executed before each C++ file is compiled.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.cc</SettingName>
                <Identifier>CC</Identifier>
                <Type>UnquotedString</Type>
                <Value>nios2-elf-gcc -xc</Value>
                <DefaultValue>nios2-elf-gcc -xc</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>C compiler command.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.bsp_cxx_flags</SettingName>
                <Identifier>BSP_CXXFLAGS</Identifier>
                <Type>UnquotedString</Type>
                <Value>none</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Custom flags only passed to the C++ compiler. This setting defines the value of BSP_CXXFLAGS in Makefile.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.bsp_inc_dirs</SettingName>
                <Identifier>BSP_INC_DIRS</Identifier>
                <Type>UnquotedString</Type>
                <Value>none</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Space separated list of extra include directories to scan for header files. Directories are relative to the top-level BSP directory. The -I prefix's added by the makefile so don't add it here. This setting defines the value of BSP_INC_DIRS in Makefile.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.cxx</SettingName>
                <Identifier>CXX</Identifier>
                <Type>UnquotedString</Type>
                <Value>nios2-elf-gcc -xc++</Value>
                <DefaultValue>nios2-elf-gcc -xc++</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>C++ compiler command.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.bsp_cflags_user_flags</SettingName>
                <Identifier>BSP_CFLAGS_USER_FLAGS</Identifier>
                <Type>UnquotedString</Type>
                <Value>none</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>makefile_variable</DestinationFile>
                <Description>Custom flags passed to the compiler when compiling C, C++, and .S files. This setting defines the value of BSP_CFLAGS_USER_FLAGS in Makefile.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.cflags_mgpopt</SettingName>
                <Identifier>CFLAGS_MGPOPT</Identifier>
                <Type>UnquotedString</Type>
                <Value>-mgpopt=global</Value>
                <DefaultValue>-mgpopt=global</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>C/C++ compiler to generate (do not generate) GP-relative accesses. 'none' tells the compilter not to generate GP-relative accesses. 'local' will generate GP-relative accesses for small data objects that are not external, weak, or uninitialized common symbols. Also use GP-relative addressing for objects that have been explicitly placed in a small data section via a section attribute. provides the default set of debug symbols typically required to debug a typical application. 'global' is same as 'local' but also generate GP-relative accesses for small data objects that are external, weak, or common.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>common</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.ignore_system_derived.sopc_system_id</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Enable BSP generation to query SOPC system for system ID. If true ignores export of 'SOPC_SYSID_FLAG += --id=&lt;sysid>' and 'ELF_PATCH_FLAG  += --id=&lt;sysid>' to public.mk.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.ignore_system_derived.sopc_system_timestamp</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Enable BSP generation to query SOPC system for system timestamp. If true ignores export of 'SOPC_SYSID_FLAG += --timestamp=&lt;timestamp>' and 'ELF_PATCH_FLAG  += --timestamp=&lt;timestamp>' to public.mk.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.ignore_system_derived.sopc_system_base_address</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Enable BSP generation to query SOPC system for system ID base address. If true ignores export of 'SOPC_SYSID_FLAG += --sidp=&lt;address>' and 'ELF_PATCH_FLAG  += --sidp=&lt;address>' to public.mk.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.ignore_system_derived.sopc_simulation_enabled</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Enable BSP generation to query if SOPC system has simulation enabled. If true ignores export of 'ELF_PATCH_FLAG  += --simulation_enabled' to public.mk.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.ignore_system_derived.fpu_present</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Enable BSP generation to query if SOPC system has FPU present. If true ignores export of 'ALT_CFLAGS += -mhard-float' to public.mk if FPU is found in the system. If true ignores export of 'ALT_CFLAGS += -mhard-soft' if FPU is not found in the system.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.ignore_system_derived.cdx_present</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>If true, prevents GCC from using CDX instructions. If false, GCC uses CDX instructions if present in the CPU.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.ignore_system_derived.bmx_present</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>If true, prevents GCC from using BMX instructions. If false, GCC uses BMX instructions if present in the CPU.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.ignore_system_derived.hardware_multiplier_present</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Enable BSP generation to query if SOPC system has multiplier present. If true ignores export of 'ALT_CFLAGS += -mno-hw-mul' to public.mk if no multiplier is found in the system. If true ignores export of 'ALT_CFLAGS += -mhw-mul' if multiplier is found in the system.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.ignore_system_derived.hardware_mulx_present</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Enable BSP generation to query if SOPC system has hardware mulx present. If true ignores export of 'ALT_CFLAGS += -mno-hw-mulx' to public.mk if no mulx is found in the system. If true ignores export of 'ALT_CFLAGS += -mhw-mulx' if mulx is found in the system.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.ignore_system_derived.hardware_divide_present</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Enable BSP generation to query if SOPC system has hardware divide present. If true ignores export of 'ALT_CFLAGS += -mno-hw-div' to public.mk if no division is found in system. If true ignores export of 'ALT_CFLAGS += -mhw-div' if division is found in the system.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.ignore_system_derived.debug_core_present</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Enable BSP generation to query if SOPC system has a debug core present. If true ignores export of 'CPU_HAS_DEBUG_CORE = 1' to public.mk if a debug core is found in the system. If true ignores export of 'CPU_HAS_DEBUG_CORE = 0' if no debug core is found in the system.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.ignore_system_derived.big_endian</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Enable BSP generation to query if SOPC system is big endian. If true ignores export of 'ALT_CFLAGS += -meb' to public.mk if big endian system.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.ignore_system_derived.hardware_fp_cust_inst_divider_present</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Enable BSP generation to query if SOPC system floating point custom instruction with a divider is present. If true ignores export of 'ALT_CFLAGS += -mcustom-fpu-cfg=60-2' and 'ALT_LDFLAGS += -mcustom-fpu-cfg=60-2' to public.mk if the custom instruction is found in the system.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.make.ignore_system_derived.hardware_fp_cust_inst_no_divider_present</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Enable BSP generation to query if SOPC system floating point custom instruction without a divider is present. If true ignores export of 'ALT_CFLAGS += -mcustom-fpu-cfg=60-1' and 'ALT_LDFLAGS += -mcustom-fpu-cfg=60-1' to public.mk if the custom instruction is found in the system.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.enable_exit</SettingName>
                <Identifier>ALT_NO_EXIT</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Add exit() support. This option increases code footprint if your "main()" routine does "return" or call "exit()". If false, adds -DALT_NO_EXIT to ALT_CPPFLAGS in public.mk, and reduces footprint</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.enable_small_c_library</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Causes the small newlib (C library) to be used. This reduces code and data footprint at the expense of reduced functionality. Several newlib features are removed such as floating-point support in printf(), stdin input routines, and buffered I/O. The small C library is not compatible with Micrium MicroC/OS-II. If true, adds -msmallc to ALT_LDFLAGS in public.mk.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>common</Group>
        </Setting>
        <Setting>
                <SettingName>hal.enable_clean_exit</SettingName>
                <Identifier>ALT_NO_CLEAN_EXIT</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>When your application exits, close file descriptors, call C++ destructors, etc. Code footprint can be reduced by disabling clean exit. If disabled, adds -DALT_NO_CLEAN_EXIT to ALT_CPPFLAGS -D'exit(a)=_exit(a)' in public.mk.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.enable_runtime_stack_checking</SettingName>
                <Identifier>ALT_STACK_CHECK</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Turns on HAL runtime stack checking feature. Enabling this setting causes additional code to be placed into each subroutine call to generate an exception if a stack collision occurs with the heap or statically allocated data. If true, adds -DALT_STACK_CHECK and -fstack-limit-register=et to ALT_CPPFLAGS in public.mk.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.enable_gprof</SettingName>
                <Identifier>ALT_PROVIDE_GMON</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Causes code to be compiled with gprof profiling enabled and the application ELF to be linked with the GPROF library. If true, adds -DALT_PROVIDE_GMON to ALT_CPPFLAGS and -pg to ALT_CFLAGS in public.mk.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>common</Group>
        </Setting>
        <Setting>
                <SettingName>hal.enable_c_plus_plus</SettingName>
                <Identifier>ALT_NO_C_PLUS_PLUS</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Enable support for a subset of the C++ language. This option increases code footprint by adding support for C++ constructors. Certain features, such as multiple inheritance and exceptions are not supported. If false, adds -DALT_NO_C_PLUS_PLUS to ALT_CPPFLAGS in public.mk, and reduces code footprint.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.enable_reduced_device_drivers</SettingName>
                <Identifier>ALT_USE_SMALL_DRIVERS</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Certain drivers are compiled with reduced functionality to reduce code footprint. Not all drivers observe this setting. The altera_avalon_uart and altera_avalon_jtag_uart drivers switch from interrupt-driven to polled operation. CAUTION: Several device drivers are disabled entirely. These include the altera_avalon_cfi_flash, altera_avalon_epcs_flash_controller, and altera_avalon_lcd_16207 drivers. This can result in certain API (HAL flash access routines) to fail. You can define a symbol provided by each driver to prevent it from being removed. If true, adds -DALT_USE_SMALL_DRIVERS to ALT_CPPFLAGS in public.mk.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>common</Group>
        </Setting>
        <Setting>
                <SettingName>hal.enable_lightweight_device_driver_api</SettingName>
                <Identifier>ALT_USE_DIRECT_DRIVERS</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Enables lightweight device driver API. This reduces code and data footprint by removing the HAL layer that maps device names (e.g. /dev/uart0) to file descriptors. Instead, driver routines are called directly. The open(), close(), and lseek() routines will always fail if called. The read(), write(), fstat(), ioctl(), and isatty() routines only work for the stdio devices. If true, adds -DALT_USE_DIRECT_DRIVERS to ALT_CPPFLAGS in public.mk.</Description>
                <Restrictions>The Altera Host and read-only ZIP file systems can't be used if hal.enable_lightweight_device_driver_api is true.</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.enable_mul_div_emulation</SettingName>
                <Identifier>ALT_NO_INSTRUCTION_EMULATION</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Adds code to emulate multiply and divide instructions in case they are executed but aren't present in the CPU. Normally this isn't required because the compiler won't use multiply and divide instructions that aren't present in the CPU. If false, adds -DALT_NO_INSTRUCTION_EMULATION to ALT_CPPFLAGS in public.mk.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.enable_sim_optimize</SettingName>
                <Identifier>ALT_SIM_OPTIMIZE</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>The BSP is compiled with optimizations to speedup HDL simulation such as initializing the cache, clearing the .bss section, and skipping long delay loops. If true, adds -DALT_SIM_OPTIMIZE to ALT_CPPFLAGS in public.mk.</Description>
                <Restrictions>When this setting is true, the BSP shouldn't be used to build applications that are expected to run real hardware.</Restrictions>
                <Enabled>false</Enabled>
                <Group>common</Group>
        </Setting>
        <Setting>
                <SettingName>hal.enable_sopc_sysid_check</SettingName>
                <Identifier>none</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Enable SOPC Builder System ID. If a System ID SOPC Builder component is connected to the CPU associated with this BSP, it will be enabled in the creation of command-line arguments to download an ELF to the target. Otherwise, system ID and timestamp values are left out of public.mk for application Makefile "download-elf" target definition. With the system ID check disabled, the Nios II EDS tools will not automatically ensure that the application .elf file (and BSP it is linked against) corresponds to the hardware design on the target. If false, adds --accept-bad-sysid to SOPC_SYSID_FLAG in public.mk.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.custom_newlib_flags</SettingName>
                <Identifier>CUSTOM_NEWLIB_FLAGS</Identifier>
                <Type>UnquotedString</Type>
                <Value>none</Value>
                <DefaultValue>none</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Build a custom version of newlib with the specified space-separated compiler flags.</Description>
                <Restrictions>The custom newlib build will be placed in the &lt;bsp root>/newlib directory, and will be used only for applications that utilize this BSP.</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>hal.log_flags</SettingName>
                <Identifier>ALT_LOG_FLAGS</Identifier>
                <Type>DecimalNumber</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>The value is assigned to ALT_LOG_FLAGS in the generated public.mk. See hal.log_port setting description. Values can be -1 through 3.</Description>
                <Restrictions>hal.log_port must be set for this to be used.</Restrictions>
                <Enabled>false</Enabled>
                <Group>none</Group>
        </Setting>
        <Setting>
                <SettingName>freertos.system.preemption</SettingName>
                <Identifier>OS_USE_PREEMPTION</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Set to 1 to use the preemptive kernel, or 0 to use the cooperative kernel.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.system.idle_hook</SettingName>
                <Identifier>OS_USE_IDLE_HOOK</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Set to 1 if you wish to use an idle hook, or 0 to omit an idle hook.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.system.use_tick_hook</SettingName>
                <Identifier>OS_USE_TICK_HOOK</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Set to 1 if you wish to use an tick hook, or 0 to omit an tick hook.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.system.use_16_bit_ticks</SettingName>
                <Identifier>OS_USE_16_BIT_TICKS</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Time is measured in 'ticks' - which is the number of times the tick interrupt has executed since the kernel was started. The tick count is held in a variable of type portTickType. Defining configUSE_16_BIT_TICKS as 1 causes portTickType to be defined (typedef'ed) as an unsigned 16bit type. Defining configUSE_16_BIT_TICKS as 0 causes portTickType to be defined (typedef'ed) as an unsigned 32bit type.

Using a 16 bit type will greatly improve performance on 8 and 16 bit architectures, but limits the maximum specifiable time period to 65535 'ticks'. Therefore, assuming a tick frequency of 250Hz, the maximum time a task can delay or block when a 16bit counter is used is 262 seconds, compared to 17179869 seconds when using a 32bit counter.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.system.tick_rate_hz</SettingName>
                <Identifier>OS_TICK_RATE_HZ</Identifier>
                <Type>DecimalNumber</Type>
                <Value>1000</Value>
                <DefaultValue>1000</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>-- ignored ... calculated on the go -- The frequency of the RTOS tick interrupt.
The tick interrupt is used to measure time. Therefore a higher tick frequency means time can be measured to a higher resolution. However, a high tick frequency also means that the kernel will use more CPU time so be less efficient. The RTOS demo applications all use a tick rate of 1000Hz. This is used to test the kernel and is higher than would normally be required.

More than one task can share the same priority. The kernel will share processor time between tasks of the same priority by switching between the tasks during each RTOS tick. A high tick rate frequency will therefore also have the effect of reducing the 'time slice' given to each task.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.system.idle_should_yield</SettingName>
                <Identifier>OS_IDLE_SHOULD_YIELD</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>This parameter controls the behaviour of tasks at the idle priority. It only has an effect if:
The preemptive scheduler is being used.
The users application creates tasks that run at the idle priority.
Tasks that share the same priority will time slice. Assuming none of the tasks get preempted, it might be assumed that each task of at a given priority will be allocated an equal amount of processing time - and if the shared priority is above the idle priority then this is indeed the case.
 When tasks share the idle priority the behaviour can be slightly different. When configIDLE_SHOULD_YIELD is set to 1 the idle task will yield immediately should any other task at the idle priority be ready to run. This ensures the minimum amount of time is spent in the idle task when application tasks are available for scheduling. This behaviour can however have undesirable effects (depending on the needs of your application) as depicted below:


This diagram shows the execution pattern of four tasks at the idle priority. Tasks A, B and C are application tasks. Task I is the idle task. A context switch occurs with regular period at times T0, T1, ..., T6. When the idle task yields task A starts to execute - but the idle task has already taken up some of the current time slice. This results in task I and task A effectively sharing a time slice. The application tasks B and C therefore get more processing time than the application task A.

This situation can be avoided by:

If appropriate, using an idle hook in place of separate tasks at the idle priority.
Creating all application tasks at a priority greater than the idle priority.
Setting configIDLE_SHOULD_YIELD to 0.
Setting configIDLE_SHOULD_YIELD prevents the idle task from yielding processing time until the end of its time slice. This ensure all tasks at the idle priority are allocated an equal amount of processing time - but at the cost of a greater proportion of the total processing time being allocated to the idle task.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.task.max_priorities</SettingName>
                <Identifier>OS_MAX_PRIORITIES</Identifier>
                <Type>DecimalNumber</Type>
                <Value>5</Value>
                <DefaultValue>5</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>The number of priorities available to the application tasks. Any number of tasks can share the same priority. Co-routines are prioritised separately - see configMAX_CO_ROUTINE_PRIORITIES.
Each available priority consumes RAM within the kernel so this value should not be set any higher than actually required by your application.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.task.minimal_stack_size</SettingName>
                <Identifier>OS_MINIMAL_STACK_SIZE</Identifier>
                <Type>DecimalNumber</Type>
                <Value>4096</Value>
                <DefaultValue>4096</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>The size of the stack used by the idle task. Generally this should not be reduced from the value set in the FreeRTOSConfig.h file provided with the demo application for the port you are using.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.task.max_task_name_len</SettingName>
                <Identifier>OS_MAX_TASK_NAME_LEN</Identifier>
                <Type>DecimalNumber</Type>
                <Value>40</Value>
                <DefaultValue>40</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>The maximum permissible length of the descriptive name given to a task when the task is created. The length is specified in the number of characters including the NULL termination byte.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.memory.total_heap_size</SettingName>
                <Identifier>OS_TOTAL_HEAP_SIZE</Identifier>
                <Type>DecimalNumber</Type>
                <Value>1048576</Value>
                <DefaultValue>1048576</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>The total amount of RAM available to the kernel.
This value will only be used if your application makes use of one of the sample memory allocation schemes provided in the FreeRTOS source code download. See the memory configuration section for further details.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.memory.malloc_failed_hook</SettingName>
                <Identifier>OS_USE_MALLOC_FAILED_HOOK</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Defines whether vApplicationMallocFailedHook should be called on memory allocation failure</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.memory.thread_safe_malloc</SettingName>
                <Identifier>OS_THREAD_SAFE_NEWLIB</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Defines whether if we lock malloc with a recursive mutex so we it would be safe to malloc from different applications simultaniously</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.memory.check_for_stack_overflow</SettingName>
                <Identifier>OS_CHECK_FOR_STACK_OVERFLOW</Identifier>
                <Type>DecimalNumber</Type>
                <Value>2</Value>
                <DefaultValue>2</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Stack Overflow Detection - Method 1
 It is likely that the stack will reach its greatest (deepest) value after the kernel has swapped the task out of the Running state because this is when the stack will contain the task context. At this point the kernel can check that the processor stack pointer remains within the valid stack space. The stack overflow hook function is called if the stack pointer contain a value that is outside of the valid stack range.
This method is quick but not guaranteed to catch all stack overflows. Set configCHECK_FOR_STACK_OVERFLOW to 1 to use this method only.


Stack Overflow Detection - Method 2

 When a task is first created its stack is filled with a known value. When swapping a task out of the Running state the kernel can check the last 16 bytes within the valid stack range to ensure that these known values have not been overwritten by the task or interrupt activity. The stack overflow hook function is called should any of these 16 bytes not remain at their initial value.
This method is less efficient than method one, but still fairly fast. It is very likely to catch stack overflows but is still not guaranteed to catch all overflows.

To use this method in combination with method 1 set configCHECK_FOR_STACK_OVERFLOW to 2. It is not possible to use only this method.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.debug.use_trace_facility</SettingName>
                <Identifier>OS_USE_TRACE_FACILITY</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Set to 1 if you wish to include additional structure members and functions to assist with execution visualisation and tracing.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.mutexes.use_mutexes</SettingName>
                <Identifier>OS_USE_MUTEXES</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Set to 1 to include mutex functionality in the build, or 0 to omit mutex functionality from the build. Readers should familiarise themselves with the differences between mutexes and binary semaphores in relation to the FreeRTOS functionality.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.mutexes.use_recursive_mutexes</SettingName>
                <Identifier>OS_USE_RECURSIVE_MUTEXES</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Set to 1 to include recursive mutex functionality in the build, or 0 to omit recursive mutex functionality from the build.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.semaphores.use_counting_semaphores</SettingName>
                <Identifier>OS_USE_COUNTING_SEMAPHORES</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Set to 1 to include counting semaphore functionality in the build, or 0 to omit counting semaphore functionality from the build.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.queue.queue_registery_size</SettingName>
                <Identifier>OS_QUEUE_REGISTRY_SIZE</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>The queue registry has two purposes, both of which are associated with kernel aware debugging:
It allows a textual name to be associated with a queue for easy queue identification within a debugging GUI.
It contains the information required by a debugger to locate each registered queue and semaphore.
The queue registry has no purpose unless you are using a kernel aware debugger.
configQUEUE_REGISTRY_SIZE defines the maximum number of queues and semaphores that can be registered. Only those queues and semaphores that you want to view using a kernel aware debugger need be registered. See the API reference documentation for vQueueAddToRegistry() and vQueueUnregisterQueue() for more information.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.queue.use_alternative_api</SettingName>
                <Identifier>OS_USE_ALTERNATIVE_API</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>The source code that implements the alternative (Alt) API is much simpler because it executes everything from within a critical section. This is the approach taken by many other RTOSes, but FreeRTOS.org has the preferred fully featured API too. The fully featured API has more complex code that takes longer to execute, but makes much less use of critical sections. Therefore the alternative API sacrifices interrupt responsiveness to gain execution speed, whereas the fully featured API sacrifices execution speed to ensure better interrupt responsiveness.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.co_routines.use_co_routines</SettingName>
                <Identifier>OS_USE_CO_ROUTINES</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Set to 1 to include co-routine functionality in the build, or 0 to omit co-routine functionality from the build. To include co-routines croutine.c must be included in the project.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.co_routines.max_co_routine_priority</SettingName>
                <Identifier>OS_MAX_CO_ROUTINE_PRIORITIES</Identifier>
                <Type>DecimalNumber</Type>
                <Value>2</Value>
                <DefaultValue>2</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>The number of priorities available to the application co-routines. Any number of co-routines can share the same priority. Tasks are prioritised separately - see configMAX_PRIORITIES.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.timers.timer_task_priority</SettingName>
                <Identifier>OS_TIMER_TASK_PRIORITY</Identifier>
                <Type>DecimalNumber</Type>
                <Value>5</Value>
                <DefaultValue>5</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Sets the priority of the software timer service/daemon task. See the FreeRTOS software timers page for a full description.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.timers.timer_queue_length</SettingName>
                <Identifier>OS_TIMER_QUEUE_LENGTH</Identifier>
                <Type>DecimalNumber</Type>
                <Value>10</Value>
                <DefaultValue>10</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Sets the length of the software timer command queue. See the FreeRTOS software timers page for a full description.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.include.inc_task_prio_set</SettingName>
                <Identifier>OS_vTaskPrioritySet</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>The macros starting 'INCLUDE' allow those components of the real time kernel not utilized by your application to be excluded from your build. This ensures the RTOS does not use any more ROM or RAM than necessary for your particular embedded application.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.include.inc_task_prio_get</SettingName>
                <Identifier>OS_uxTaskPriorityGet</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>The macros starting 'INCLUDE' allow those components of the real time kernel not utilized by your application to be excluded from your build. This ensures the RTOS does not use any more ROM or RAM than necessary for your particular embedded application.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.include.inc_task_delete</SettingName>
                <Identifier>OS_vTaskDelete</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>The macros starting 'INCLUDE' allow those components of the real time kernel not utilized by your application to be excluded from your build. This ensures the RTOS does not use any more ROM or RAM than necessary for your particular embedded application.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.include.inc_task_cleanup_resources</SettingName>
                <Identifier>OS_vTaskCleanUpResources</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>The macros starting 'INCLUDE' allow those components of the real time kernel not utilized by your application to be excluded from your build. This ensures the RTOS does not use any more ROM or RAM than necessary for your particular embedded application.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.include.inc_task_suspend</SettingName>
                <Identifier>OS_vTaskSuspend</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>The macros starting 'INCLUDE' allow those components of the real time kernel not utilized by your application to be excluded from your build. This ensures the RTOS does not use any more ROM or RAM than necessary for your particular embedded application.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.include.inc_task_delay_util</SettingName>
                <Identifier>OS_vTaskDelayUntil</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>The macros starting 'INCLUDE' allow those components of the real time kernel not utilized by your application to be excluded from your build. This ensures the RTOS does not use any more ROM or RAM than necessary for your particular embedded application.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.include.inc_task_delay</SettingName>
                <Identifier>OS_vTaskDelay</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>The macros starting 'INCLUDE' allow those components of the real time kernel not utilized by your application to be excluded from your build. This ensures the RTOS does not use any more ROM or RAM than necessary for your particular embedded application.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.include.inc_task_get_stack</SettingName>
                <Identifier>OS_uxTaskGetStackHighWaterMark</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>The macros starting 'INCLUDE' allow those components of the real time kernel not utilized by your application to be excluded from your build. This ensures the RTOS does not use any more ROM or RAM than necessary for your particular embedded application.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.kernel.kernel_irq_priority</SettingName>
                <Identifier>OS_KERNEL_INTERRUPT_PRIORITY</Identifier>
                <Type>DecimalNumber</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Should not be changed and removed?</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>freertos.kernel.max_syscall_irq_priority</SettingName>
                <Identifier>OS_MAX_SYSCALL_INTERRUPT_PRIORITY</Identifier>
                <Type>DecimalNumber</Type>
                <Value>3</Value>
                <DefaultValue>3</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Should not be changed and removed?</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.checksum.enable_generate_ip</SettingName>
                <Identifier>CONF_LWIP_CHECKSUM_GEN_IP</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Enable generation of checksums for IP frames</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.checksum.enable_generate_udp</SettingName>
                <Identifier>CONF_LWIP_CHECKSUM_GEN_UDP</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Enable generation of checksums for UDP frames</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.checksum.enable_generate_tcp</SettingName>
                <Identifier>CONF_LWIP_CHECKSUM_GEN_TCP</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Enable generation of checksums for TCP frames</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.checksum.enable_check_ip</SettingName>
                <Identifier>CONF_LWIP_CHECKSUM_CHECK_IP</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Enable checking of checksums from IP frames</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.checksum.enable_check_udp</SettingName>
                <Identifier>CONF_LWIP_CHECKSUM_CHECK_UDP</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Enable checking of checksums from UDP frames</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.checksum.enable_check_tcp</SettingName>
                <Identifier>CONF_LWIP_CHECKSUM_CHECK_TCP</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Enable checking of checksums from TCP frames</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.proto.enable_vlan</SettingName>
                <Identifier>CONF_LWIP_PROTO_VLAN</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Enable VLAN support</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.proto.enable_icmp</SettingName>
                <Identifier>CONF_LWIP_PROTO_ICMP</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Enable ICMP support</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.proto.enable_autoip</SettingName>
                <Identifier>CONF_LWIP_PROTO_AUTOIP</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Enable AutoIP support</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.proto.enable_snmp</SettingName>
                <Identifier>CONF_LWIP_PROTO_SNMP</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Enable SNMP support</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.proto.enable_igmp</SettingName>
                <Identifier>CONF_LWIP_PROTO_IGMP</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Enable IGMP support</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.proto.enable_dns</SettingName>
                <Identifier>CONF_LWIP_PROTO_DNS</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Enable DNS support</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.proto.enable_udp</SettingName>
                <Identifier>CONF_LWIP_PROTO_UDP</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Enable UDP support</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.proto.enable_tcp</SettingName>
                <Identifier>CONF_LWIP_PROTO_TCP</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Enable TCP support</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.proto.enable_dhcp</SettingName>
                <Identifier>CONF_LWIP_PROTO_DHCP</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Enable DHCP support</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.connections.raw_pcb_count</SettingName>
                <Identifier>CONF_LWIP_RAW_PCB</Identifier>
                <Type>DecimalNumber</Type>
                <Value>2</Value>
                <DefaultValue>2</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Number of raw sockets supported (Used by ICMP for example)</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.connections.udp_pcb_count</SettingName>
                <Identifier>CONF_LWIP_UDP_PCB</Identifier>
                <Type>DecimalNumber</Type>
                <Value>15</Value>
                <DefaultValue>15</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Number of UDP sockets supported</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.connections.tcp_pcb_count</SettingName>
                <Identifier>CONF_LWIP_TCP_PCB</Identifier>
                <Type>DecimalNumber</Type>
                <Value>15</Value>
                <DefaultValue>15</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Number of TCP sockets supported</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.connections.tcp_listen_pcb_count</SettingName>
                <Identifier>CONF_LWIP_TCP_PCB_LISTEN</Identifier>
                <Type>DecimalNumber</Type>
                <Value>10</Value>
                <DefaultValue>10</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Number of TCP Listening sockets supported</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.memory.mem_size</SettingName>
                <Identifier>CONF_LWIP_MEM_SIZE</Identifier>
                <Type>DecimalNumber</Type>
                <Value>32768</Value>
                <DefaultValue>32768</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Size of the memory poll</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.memory.overflow_check</SettingName>
                <Identifier>CONF_LWIP_OVERFLOW_CHECK</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Do memory overflow checking</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.memory.pbuf_count</SettingName>
                <Identifier>CONF_LWIP_PBUF_COUNT</Identifier>
                <Type>DecimalNumber</Type>
                <Value>32</Value>
                <DefaultValue>32</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Number of packet buffers supported</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.loopback</SettingName>
                <Identifier>CONF_LWIP_LOOPBACK</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Loopback outgoing traffic to our selfs</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.loopback_if</SettingName>
                <Identifier>CONF_LWIP_LOOPBACKIF</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Create a loopback interface 'lo'</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.stats</SettingName>
                <Identifier>CONF_LWIP_STATS</Identifier>
                <Type>Boolean</Type>
                <Value>1</Value>
                <DefaultValue>1</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Keep track of the LwIP traffic statistics</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.ip_forward</SettingName>
                <Identifier>CONF_LWIP_IP_FORWARD</Identifier>
                <Type>Boolean</Type>
                <Value>0</Value>
                <DefaultValue>0</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>Keep track of the LwIP traffic statistics</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>lwip.ttl</SettingName>
                <Identifier>CONF_LWIP_DEFAULT_TTL</Identifier>
                <Type>DecimalNumber</Type>
                <Value>64</Value>
                <DefaultValue>64</DefaultValue>
                <DestinationFile>system_h_define</DestinationFile>
                <Description>The default TTL (Time To Life) set to a packet</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>altera_eth_tse_driver_hal.autoneg_timeout</SettingName>
                <Identifier>ALTERA_AUTONEG_TIMEOUT_THRESHOLD</Identifier>
                <Type>DecimalNumber</Type>
                <Value>2500</Value>
                <DefaultValue>2500</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Auto Negotiation Timeout in milliseconds</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>altera_eth_tse_driver_hal.checklink_timeout</SettingName>
                <Identifier>ALTERA_CHECKLINK_TIMEOUT_THRESHOLD</Identifier>
                <Type>DecimalNumber</Type>
                <Value>10000</Value>
                <DefaultValue>10000</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>CheckLink Timeout in milliseconds</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>altera_eth_tse_driver_hal.nomdio_timeout</SettingName>
                <Identifier>ALTERA_NOMDIO_TIMEOUT_THRESHOLD</Identifier>
                <Type>DecimalNumber</Type>
                <Value>1000000</Value>
                <DefaultValue>1000000</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>"No MDIO" Timeout in microseconds</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>altera_avalon_uart_driver.enable_small_driver</SettingName>
                <Identifier>ALTERA_AVALON_UART_SMALL</Identifier>
                <Type>BooleanDefineOnly</Type>
                <Value>false</Value>
                <DefaultValue>false</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Small-footprint (polled mode) driver</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>altera_avalon_uart_driver.enable_ioctl</SettingName>
                <Identifier>ALTERA_AVALON_UART_USE_IOCTL</Identifier>
                <Type>BooleanDefineOnly</Type>
                <Value>false</Value>
                <DefaultValue>false</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Enable driver ioctl() support. This feature is not compatible with the 'small' driver; ioctl() support will not be compiled if either the UART 'enable_small_driver' or HAL 'enable_reduced_device_drivers' settings are enabled.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>altera_avalon_jtag_uart_driver.enable_small_driver</SettingName>
                <Identifier>ALTERA_AVALON_JTAG_UART_SMALL</Identifier>
                <Type>BooleanDefineOnly</Type>
                <Value>false</Value>
                <DefaultValue>false</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Small-footprint (polled mode) driver</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <Setting>
                <SettingName>altera_avalon_jtag_uart_driver.enable_jtag_uart_ignore_fifo_full_error</SettingName>
                <Identifier>ALTERA_AVALON_JTAG_UART_IGNORE_FIFO_FULL_ERROR</Identifier>
                <Type>BooleanDefineOnly</Type>
                <Value>false</Value>
                <DefaultValue>false</DefaultValue>
                <DestinationFile>public_mk_define</DestinationFile>
                <Description>Enable JTAG UART driver to recover when host is inactive causing buffer to full without returning error. Printf will not fail with this recovery.</Description>
                <Restrictions>none</Restrictions>
                <Enabled>false</Enabled>
                <Group xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </Setting>
        <MemoryMap>
                <slaveDescriptor>sdram_controller_0</slaveDescriptor>
                <addressRange>0x02000000 - 0x03FFFFFF</addressRange>
                <addressSpan>33554432</addressSpan>
                <attributes>memory</attributes>
        </MemoryMap>
        <MemoryMap>
                <slaveDescriptor>tse_descriptor_memory_0</slaveDescriptor>
                <addressRange>0x04000000 - 0x04001FFF</addressRange>
                <addressSpan>8192</addressSpan>
                <attributes>memory</attributes>
        </MemoryMap>
        <MemoryMap>
                <slaveDescriptor>tse_mac_0</slaveDescriptor>
                <addressRange>0x04002000 - 0x040023FF</addressRange>
                <addressSpan>1024</addressSpan>
                <attributes/>
        </MemoryMap>
        <MemoryMap>
                <slaveDescriptor>sgdma_tse_rx_0</slaveDescriptor>
                <addressRange>0x04002400 - 0x0400243F</addressRange>
                <addressSpan>64</addressSpan>
                <attributes/>
        </MemoryMap>
        <MemoryMap>
                <slaveDescriptor>sgdma_tse_tx_0</slaveDescriptor>
                <addressRange>0x04002440 - 0x0400247F</addressRange>
                <addressSpan>64</addressSpan>
                <attributes/>
        </MemoryMap>
        <MemoryMap>
                <slaveDescriptor>mem_0</slaveDescriptor>
                <addressRange>0x05020000 - 0x0503FFFF</addressRange>
                <addressSpan>131072</addressSpan>
                <attributes>memory</attributes>
        </MemoryMap>
        <MemoryMap>
                <slaveDescriptor>uart_0</slaveDescriptor>
                <addressRange>0x05041000 - 0x0504101F</addressRange>
                <addressSpan>32</addressSpan>
                <attributes>printable</attributes>
        </MemoryMap>
        <MemoryMap>
                <slaveDescriptor>timer_0</slaveDescriptor>
                <addressRange>0x05041020 - 0x0504103F</addressRange>
                <addressSpan>32</addressSpan>
                <attributes>timer</attributes>
        </MemoryMap>
        <MemoryMap>
                <slaveDescriptor>altpll_0</slaveDescriptor>
                <addressRange>0x05041040 - 0x0504104F</addressRange>
                <addressSpan>16</addressSpan>
                <attributes/>
        </MemoryMap>
        <MemoryMap>
                <slaveDescriptor>jtag_uart_0</slaveDescriptor>
                <addressRange>0x05041050 - 0x05041057</addressRange>
                <addressSpan>8</addressSpan>
                <attributes>printable</attributes>
        </MemoryMap>
        <LinkerSection>
                <sectionName>.text</sectionName>
                <regionName>sdram_controller_0</regionName>
        </LinkerSection>
        <LinkerSection>
                <sectionName>.rodata</sectionName>
                <regionName>sdram_controller_0</regionName>
        </LinkerSection>
        <LinkerSection>
                <sectionName>.rwdata</sectionName>
                <regionName>sdram_controller_0</regionName>
        </LinkerSection>
        <LinkerSection>
                <sectionName>.bss</sectionName>
                <regionName>sdram_controller_0</regionName>
        </LinkerSection>
        <LinkerSection>
                <sectionName>.heap</sectionName>
                <regionName>sdram_controller_0</regionName>
        </LinkerSection>
        <LinkerSection>
                <sectionName>.stack</sectionName>
                <regionName>sdram_controller_0</regionName>
        </LinkerSection>
        <SoftwarePackageInfo>
                <name>lwip</name>
                <version>default</version>
        </SoftwarePackageInfo>
</sch:Settings>